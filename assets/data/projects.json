{
  "yellow_sky": {
    "_id": "yellow_sky",
    "_group": "games",
    "_enabled": true,
    "name": "Yellow Sky",
    "description": "Yellow Sky is a survival, resource management game in a post-apocalyptic setting. To survive in a desolate procedurally generated world, the player will need to make full use of all the scattered settlements and abandoned factories. The villages provide the player with opportunities to trade resources and complete quests, while the factories can be repaired and upgraded to produce resources.<br><br>Provided one can survive long, the factories may be upgraded into environmentally friendly versions and villages can be helped by sharing resources and restoring plant-life to their surroundings.",
    "metadata": {
      "link": "https://luischaves.itch.io/yellow-sky",
      "context": "Student Project",
      "date": "October 2022",
      "duration": "4 months",
      "team": 4,
      "engine": "Godot",
      "format": "2D"
    },
    "brief": [
      "Strategy survival game",
      "Resource management",
      "Procedural generation",
      "Made in Godot",
      "Student Project"
    ],
    "overview": [
      "Project Manager",
      "Systems Designer and Programmer",
      "Lead Programmer",
      "UI/UX Designer",
      "Procedural Generation of Game World",
      "2D Artist"
    ],
    "roles": [
      ["Project Manager"],
      [
        "Game Designer",
        "Helped design the main gameplay loop, specifically interactions with factories, quests as well as map and weather events"
      ],
      [
        "Systems Designer and Programmer",
        "Designed and implemented core systems, such as inventory, quests, factories, weather and time"
      ],
      [
        "Shader Programmer",
        "Responsible for implementing the game's perspective distortion effect"
      ],
      [
        "UI/UX Designer",
        "Responsible for most of UI design and implementation of game menus"
      ],
      [
        "Procedural Generation of Game World",
        "Fully responsible for game world generation"
      ],
      [
        "2D Artist",
        "Created most of the game's graphics and all animations"
      ],
      ["Provided help with other tasks when necessary"]
    ],
    "filters": [
      "godot",
      "2D",
      "student"
    ],
    "sorters": {
      "name": "yellow sky",
      "date": "2022-10"
    },
    "tags": [
      "Project Management",
      "Systems Engineer",
      "Gameplay Programming",
      "UI Design",
      "Pixel Art",
      "2D Animation"
    ],
    "media": {
      "thumbnail": "yellow_sky_cover.gif",
      "cover": "https://www.youtube.com/embed/g1-GlmriX4E",
      "gallery": [
        "title.png",
        "trades.gif",
        "inventory.png",
        "factory.png",
        "storm.png",
        "quests.png"
      ]
    }
  },
  "batter_time": {
    "_id": "batter_time",
    "_group": "games",
    "_enabled": true,
    "name": "A Batter of Time: the egg tart journey",
    "description": "A Batter of Time: the egg tart journey is a cooking, customer service game, with a focus on cozy and casual gameplay. As the owner of a traditional portuguese bakery, the player character must, every day, manage their bakery, cook the day's products, buy more ingredients from the neighbouring shops, all while serving the bakery's customers, engaging in conversation to get a glimpse into their lives.<br><br>Players should take their time and play at their own pace, be it engaging with the customers to learn their personal stories or simply playing their days away, managing their little bakery in the peaceful island.",
    "metadata": {
      "link": "https://knifetricks.itch.io/a-batter-of-time",
      "context": "Student Project",
      "date": "March 2023",
      "duration": "4 months",
      "team": 5,
      "engine": "Unity",
      "format": "3D"
    },
    "brief": [
      "Cooking and Management",
      "Customer Service",
      "Resource Management",
      "Made in Unity",
      "Student Project"
    ],
    "overview": [
      "Game Designer",
      "Systems Designer and Programmer",
      "Designed and implemented shops and commerce mechanics",
      "Modelled all game characters",
      "Provided help with other tasks when necessary"
    ],
    "roles": [
      [
        "Game Designer",
        "Helped design the main gameplay loop, specifically daily cycle and cooking, inventory and commerce mechanics"
      ],
      [
        "Systems Designer and Programmer",
        "Designed and implemented core systems, such as inventory, cooking, event scheduling, game state management and save system",
        "Responsible for day/night effects"
      ],
      [
        "3D Artist",
        "Created all character models"
      ],
      ["Provided help with other tasks when necessary"]
    ],
    "filters": [
      "unity",
      "3D",
      "student"
    ],
    "sorters": {
      "name": "batter of time the egg tart journey",
      "date": "2023-03"
    },
    "tags": [
      "Systems Engineer",
      "Gameplay Programming",
      "3D Modelling",
      "Character Modelling"
    ],
    "media": {
      "thumbnail": "batter_time_cover.png",
      "cover": "https://www.youtube.com/embed/ijUQZahXTic",
      "gallery": [
        "https://www.youtube.com/embed/GEuHxQcfucc",
        "cooking.gif",
        "shop.gif",
        "ready.PNG",
        "world.PNG",
        "closed_shop.PNG"
      ]
    }
  },
  "double_dilemma": {
    "_id": "double_dilemma",
    "_group": "games",
    "_enabled": true,
    "name": "Double Dilemma",
    "description": "The <a href=\"https://en.wikipedia.org/wiki/Prisoner%27s_dilemma\" target=\"_blank\">Prisoner's Dilemma</a> is a thought experiment in game theory, where two rational agents may choose to either 'cooperate' with each other or betray their partner ('defect'). This experiment tests user's willingness to either work together for mutual gain or betray each other for personal benefit.<br><br>In the traditional dilemma, cooperation always maximises the total score, while defection is always the best strategy to maximise individual score, leading to fun betrayals and counter-betrayals.<br><br>Double Dilemma is a take on the original experiment, which gives a team of two players a reason to cooperate. And that reason is playing against another team of two players! This game pits two pairs (or dyads) against each other, each one playing their own Prisioner's Dilemma in a quick-reaction timed game. In the end, the team that scores lowest will be penalised, meaning it may not be so ideal to betray all the time.",
    "metadata": {
      "link": "https://damp-squib.itch.io/double-dilemma",
      "context": "Student Project",
      "date": "January 2024",
      "duration": "2 months",
      "team": 1,
      "engine": "Godot",
      "format": "2D"
    },
    "brief": [
      "Serious Game inspired by Prisoner's Dilemma",
      "Adjustable Gameplay",
      "Multiplayer",
      "Made in Godot",
      "Student Project"
    ],
    "overview": [
      "Game Designer",
      "Adjustable Gameplay Settings",
      "Multiple Dyad Support",
      "Statistics Summary"
    ],
    "roles": [
      [
        "Game Designer",
	      "Being a solo project, I was fully responsible for the game concept"
      ],
      [
        "Adjustable Gameplay Settings",
	      "Modify the payoffs in the payoff matrix to control the resulting points attributed to players",
	      "Adjustable round time, number of rounds, among others"
      ],
      [
        "Multiple Dyad Support",
        "While the game allows the choice between 1 or 2 dyads, it is scallable for any number of competing dyads"
      ],
      [
        "Statistics Summary",
        "At the end of each round and at the end of all rounds, statistics are displayed as to how often each player defected, compared to how often they answered correctly",
        "Line chart display of the evolution of player statistics"
      ]
    ],
    "filters": [
      "godot",
      "2D",
      "student"
    ],
    "sorters": {
      "name": "double dilemma",
      "date": "2024-01"
    },
    "tags": [
      
    ],
    "media": {
      "thumbnail": "dilemma_cover.gif",
      "cover": "https://www.youtube.com/embed/6XzGgWmxe5g",
      "gallery": [
        "player4.gif",
        "player2.gif",
        "title.PNG",
        "matrix.PNG",
        "end.PNG",
        "stats.PNG"
      ]
    }
  },
  "bonzios": {
    "_id": "bonzios",
    "_group": "games",
    "_enabled": true,
    "name": "Bonzios SP 9.5",
    "description": "Bonzios SP 9.5 is a Windows XP/95 inspired game, where the player must fight a dangerous virus trying to wreck their computer. They must try to outsmart the virus deleting files and bloatware for as long as possible.<br><br>This game was made for the Ludum Dare 54 Game Jam. The theme for that was \"Limited Space\". Our team interpreted that as computer space and Bonzios was born. We were happy to find that we actually ranked fairly high in some categories, most notably, humour, which we were especially proud of.",
    "metadata": {
      "link": "https://luischaves.itch.io/bonzios-sp-95",
      "context": "Game Jam",
      "date": "October 2023",
      "duration": "3 days",
      "team": 4,
      "engine": "Godot",
      "format": "2D"
    },
    "brief": [
      "Arcade style time attack game",
      "Windows 95 Aesthetics",
      "Made in Godot",
      "Ludum Dare 54, Theme: \"Limited Space\""
    ],
    "overview": [
      "Game Designer",
      "Gameplay Programmer",
      "2D Artist/Animator",
      "UI/UX Designer"
    ],
    "roles": [
      [
        "Game Designer",
        "As with all game jams, we all contributed to the game concept"
      ],
      [
        "Gameplay Programmer",
        "One of the lead gameplay programmers",
        "I was of one of the two programmers implementing the core functionality of the gameplay, specifically the logic of files, deleting/spawning them and handling their special effects"
      ],
      [
        "2D Artist/Animator",
        "Responsible for the all the game pixel art graphics and animations"
      ],
      [
        "UI/UX Designer",
        "Designed and implemented the game's menus"
      ]
    ],
    "filters": [
      "godot",
      "2D",
      "game-jam"
    ],
    "sorters": {
      "name": "bonzios sp",
      "date": "2023-10"
    },
    "tags": [
      
    ],
    "media": {
      "thumbnail": "bonzios_cover.gif",
      "cover": "https://www.youtube.com/embed/eOw-sDmHBoA",
      "gallery": [
        "gameplay1.gif",
        "gameplay2.gif",
        "endscreen.png",
        "image.png",
        "howto.PNG"
      ]
    }
  },
  "cut_crab": {
    "_id": "cut_crab",
    "_group": "games",
    "_enabled": true,
    "name": "Cut the Crab",
    "description": "Cut the Crab is a fight to the death where only one crab may claim rightful ownership of the lagoon. To do so, they must prove themselves by engaging in mortal combat, through the ancient art of bubble fighting. Challenge a friend for this local coop game and prove yourself as the alpha crab.<br><br>This game was made for the Global Game Jam 2025. The theme for that was \"Bubbles\". Our team was inspired by the habit of many crab species of making bubbles. Additionally we felt that crabs themselves as a playable character would work very well and definitely fit our usual artistic style. Finally, as we had never tried making a multiplayer game in a game jam, we thought we'd try that for this one.",
    "metadata": {
      "link": "https://franciscorp.itch.io/cut-the-crab",
      "context": "Game Jam",
      "date": "January 2025",
      "duration": "2 days",
      "team": 4,
      "engine": "Godot",
      "format": "2D"
    },
    "brief": [
      "1v1 deathmatch with crabs!",
      "Simple controls fighting game",
      "Made in Godot",
      "Global Game Jam 2025, Theme: \"Bubbles\""
    ],
    "overview": [
      "Game Designer",
      "Gameplay Programmer",
      "Provided help with other tasks as necessary"
    ],
    "roles": [
      [
        "Game Designer",
        "As with all game jams, we all contributed to the game concept"
      ],
      [
        "Gameplay Programmer",
        "I was fully in charge of implementing player control and behaviour of the crab character and linking remaining features like interacting with bubbles and shooting them, each handled by other team members",
        "Responsible for designing and managing the player's State Machine"
      ],
      [
        "Provided help with other tasks as necessary"
      ]
    ],
    "filters": [
      "godot",
      "2D",
      "game-jam"
    ],
    "sorters": {
      "name": "cut the crab",
      "date": "2025-01"
    },
    "tags": [
      
    ],
    "media": {
      "thumbnail": "cut_crab_cover.png",
      "cover": "cut_crab_cover.png",
      "gallery": [
      ]
    }
  },
  "get_souped": {
    "_id": "get_souped",
    "_group": "games",
    "_enabled": true,
    "name": "Get Souped!",
    "description": "Get souped is a 2D/3D mix arcade-like game, where the player plays as Godzilla trying to lead helpless residents of a city to a place where he can turn them into soup to eat. Y'know, as Godzilla is know to do. Oh, also, Godzilla is really picky about food, so he must avoid accidentally leading any of the infected green citizens roaming about, before they infect the healthy ones. Also remember to smash a few buildings along the way.<br><br>This game was made for the Ludum Dare 56 Game Jam. The theme for that was \"Tiny Creatures\". The idea evolved multiple times, until we ended up with a weird mix of many versions, creating Get Souped. We had a bigger team which allowed us to add a few fun features, such as the interaction between a 3D game world with 2D characters and entertaining visuals and audio. We were very happy with the final result as other users also found the game, although very challenging, very fun to play.",
    "metadata": {
      "link": "https://luischaves.itch.io/get-souped",
      "context": "Game Jam",
      "date": "October 2024",
      "duration": "3 days",
      "team": 6,
      "engine": "Godot",
      "format": "3D"
    },
    "brief": [
      "Arcade style time attack game",
      "Seamless mix of 2D and 3D elements",
      "Sketchy, hand-drawn art style",
      "Made in Godot",
      "Ludum Dare 56, Theme: \"Tiny Creatures\""
    ],
    "overview": [
      "Game Designer",
      "Gameplay Programmer",
      "System Programmer",
      "Game Logic"
    ],
    "roles": [
      [
        "Game Designer",
	      "As with all game jams, we all contributed to the game concept"
      ],
      [
        "Gameplay Programmer",
        "One of the lead gameplay programmers",
        "Implemented entity behaviour, with a custom Stack State Machine based AI behaviour"
      ],
      [
        "System Programmer",
        "I was responsible for setting up the interaction between 2D and 3D elements on a lower level, so that another team member could handle synchronisation of 2D and 3D cameras"
      ],
      [
        "Game Logic",
        "I was responsible for implementing the main game logic, allowing the player to win/lose the game",
        "I was also responsible for handling enemy spawn mechanics, both at the start and when a building is destroyed"
      ]
    ],
    "filters": [
      "godot",
      "3D",
      "game-jam"
    ],
    "sorters": {
      "name": "get souped",
      "date": "2024-10"
    },
    "tags": [
      
    ],
    "media": {
      "thumbnail": "get_souped_cover.gif",
      "cover": "https://www.youtube.com/embed/mVTk73hcaEY",
      "gallery": [
        "gif1.gif",
        "gif2.gif",
        "img1.png",
        "img2.png",
        "img3.png",
        "img4.png"
      ]
    }
  },
  "summon_cat": {
    "_id": "summon_cat",
    "_group": "games",
    "_enabled": true,
    "name": "How to Summon a Cat (for dummies)",
    "description": "How to Summon a Cat (for dummies) was inspired by the herculean, nigh impossible task of getting your cat to come to you. To try (and fail) to achieve this, you can throw objects that your cat might like, in the hopes that you can lure it to you. But be careful, some items, such as bananas and lemons are deeply hated by cats and may have the opposite effect.<br><br>This game was made for the Ludum Dare 55 Game Jam. The theme for that was \"Summoning\". While the first 24 hours were spent in agonising over not wanting to make a game about literal, obvious summoning, but also not having any other ideas, we, eventually came up with this concept. The idea dawned on us when we thought of summoning as in \"calling\" something and, thanks to our talented artist, we were sold on the idea of having a cute but annoying cat not coming over to you.",
    "metadata": {
      "link": "https://inesseni00.itch.io/how-to-summon-a-cat-for-dummies",
      "context": "Game Jam",
      "date": "April 2024",
      "duration": "3 days",
      "team": 5,
      "engine": "Godot",
      "format": "2D"
    },
    "brief": [
      "Cute game with a cute cat",
      "Simple mechanics and objective",
      "Made in Godot",
      "Ludum Dare 56, Theme: \"Summoning\""
    ],
    "overview": [
      "Game Designer",
      "Gameplay Programmer",
      "System Programmer",
      "Game Logic"
    ],
    "roles": [
      [
        "Game Designer",
	      "As with all game jams, we all contributed to the game concept"
      ],
      [
        "Gameplay Programmer",
        "Responsible for implementing the cat's head and co-implementing the synchronisation between head and body, which was implemented by another team member",
        "Responsible for the throwing mechanic of items as well as their associated physics"
      ],
      [
        "Provided help with sound design and implementation"
      ]
    ],
    "filters": [
      "godot",
      "2D",
      "game-jam"
    ],
    "sorters": {
      "name": "how to summon a cat (for dummies)",
      "date": "2024-04"
    },
    "tags": [
      
    ],
    "media": {
      "thumbnail": "summon_cat_cover.png",
      "cover": "https://www.youtube.com/embed/mnBA9odAQ1Y",
      "gallery": [
        "win.png",
        "game1.png",
        "lose.png",
        "title.png"
      ]
    }
  },
  "beet_up": {
    "_id": "beet_up",
    "_group": "games",
    "_enabled": true,
    "name": "Beet Up: Raddish Edition",
    "description": "Beet Up: Raddish Edition is a short arcade game where the player is tasked with saving the Beet planet from non-root vegetables from outer space! These strange and different creatures started to attack the planet, and its up to the player to prevent them from reaching the population that took refuge in the planet's core.<br><br>This game was made for the Global Game Jam 2023. The theme for that was \"Roots\". This being most of the team's first game jam, we struggled for a bit on how to use the theme. Eventually we remembered that radishes are roots. After that, we thought that we could, not only have a radish, but a RADdish and the idea sort of grew from there.",
    "metadata": {
      "link": "https://tgnics.itch.io/beet-up-raddish-edition",
      "context": "Game Jam",
      "date": "February 2023",
      "duration": "2 days",
      "team": 6,
      "engine": "Godot",
      "format": "2D"
    },
    "brief": [
      "Arcade style game",
      "Crowd Control",
      "Made in Godot",
      "Global Game Jam 2023, Theme: \"Roots\""
    ],
    "overview": [
      "Game Designer",
      "2D Artist/Animator",
      "Game Programmer"
    ],
    "roles": [
      [
        "Game Designer",
	      "As with all game jams, we all contributed to the game concept"
      ],
      [
        "2D Artist/Animator",
        "Responsible for the all the game pixel art graphics and animations, with the exception of the background"
      ],
      [
        "Gameplay Programmer",
        "While I was mostly in charge of art, I also helped a bit with programming",
        "Implemented the root shooting ability"
      ]
    ],
    "filters": [
      "godot",
      "2D",
      "game-jam"
    ],
    "sorters": {
      "name": "beet up raddish edition",
      "date": "2023-02"
    },
    "tags": [
      
    ],
    "media": {
      "thumbnail": "beet_up_cover.png",
      "cover": "https://www.youtube.com/embed/tfuKZj5X1DA",
      "gallery": [
        "world.gif",
        "world.png",
        "credits.png",
        "raddish.gif"
      ]
    }
  },
  "automatic_potato": {
    "_id": "automatic_potato",
    "_group": "games",
    "_enabled": true,
    "name": "Automatic Potato",
    "description": "Starting as a school project to test and explore game design patterns, the game Automatic Potato became a top-down shooter, where a tiny witch or cat must to protect their potion cauldron from multiple waves of spooky monsters, led by a villainous robotic tubercle. This is a simple game meant to just be a showcase of game design patterns, but which went a little beyond that. Owing to its simple origins, the game was entirely made with the PyGame framework. Also, there may or may not be a few achievements to be unlocked.",
    "metadata": {
      "link": "https://damp-squib.itch.io/automatic-potato",
      "context": "Student Project",
      "date": "November 2022",
      "duration": "1.5 months",
      "team": 2,
      "engine": "PyGame",
      "format": "2D"
    },
    "brief": [
      "Top down shooter game",
      "Fight through waves of enemies",
      "Unlock Achievements",
      "Made in Godot",
      "Global Game Jam 2023, Theme: \"Roots\""
    ],
    "overview": [
      "Project Manager",
      "Game Designer",
      "Lead Programmer",
      "System Programmer",
      "UI/UX Designer",
      "2D Artist/Animator"
    ],
    "roles": [
      [
        "Project Manager"
      ],
      [
        "Game Designer",
        "I was one of the game designers behind the concept and gameplay design"
      ],
      [
        "Lead Programmer",
        "I was responsible for a major part of programming duty, with the exception of enemy behaviour"
      ],
      [
        "System Programmer",
        "I designed and implemented every major system in the game, most notably the player mechanics and input, score and health tracking, physics detection and response and achievements tracker",
        "Since this was made in PyGame, most of these systems had to implemented almost from scratch"
      ],
      [
        "UI/UX Designer",
        "I was responsible for the game's barebones GUI, including the 'achievement unlocked' popups, with PyGame"
      ],
      [
        "2D Artist/Animator",
        "Responsible for all the game's pixel art graphics and animations"
      ]
    ],
    "filters": [
      "pygame",
      "2D",
      "student"
    ],
    "sorters": {
      "name": "Automatic Potato",
      "date": "2023-02"
    },
    "tags": [
      
    ],
    "media": {
      "thumbnail": "automatic_potato_cover.gif",
      "cover": "automatic_potato_cover.gif",
      "gallery": [
        "gameplay.png",
        "boss.png",
        "achievements.png",
        "enemies.gif"
      ]
    }
  },
  "entryway": {
    "_id": "entryway",
    "_group": "games",
    "_enabled": true,
    "name": "Entryway",
    "description": "Entryway was created as a VR university project which resulted in an action shooter. The game is divided into two stages. First, players will follow a path automatically, surrounded by high towers, where inactive drones are hidden. At the end of that path, they'll need to fight a boss before time runs out. If successful, they'll start heading back the same way, only this time, any drones the player did not kill before will actively hunt them.<br><br> Make use of four distinct weapons to fight your way to the finish line.",
    "metadata": {
      "link": "https://damp-squib.itch.io/entryway",
      "context": "Student Project",
      "date": "December 2021",
      "duration": "2 months",
      "team": 2,
      "engine": "Unity",
      "format": "VR"
    },
    "brief": [
      "VR First-Person Shooter",
      "Low Poly graphics",
      "Multiple distint weapons and controls",
      "Made in Unity",
      "Student Project"
    ],
    "overview": [
      "Game Designer",
      "Gameplay Programmer",
      "Concept Artist",
      "Setup VR controls for player and weapon interaction"
    ],
    "roles": [
      [
        "Game Designer",
        "Co-designed the game's core loop and concept",
        "Designed enemies and weapons"
      ],
      [
        "Gameplay Programmer",
        "Implemented enemy behaviour and spawning",
        "Implemented different weapons controls to accomodate both VR controls and stadard keyboard&mouse controls",
        "Responsible for implementing the level progression and game states"
      ],
      [
        "Concept Artist",
        "Responsible for the initial drafts that guided the final game aesthetics"
      ],
      [
        "Quality Assurance",
        "Co-responsible in performing usability and quality assurance tests"
      ]
    ],
    "filters": [
      "unity",
      "ar-vr",
      "student"
    ],
    "sorters": {
      "name": "entryway",
      "date": "2021-12"
    },
    "tags": [
      
    ],
    "media": {
      "thumbnail": "entryway_thumbnail.gif",
      "cover": "https://www.youtube.com/embed/vbaejZhX0jU",
      "gallery": [
        "options.gif",
        "pistol.gif",
        "machinegun.gif",
        "sabre.gif",
        "bow.gif",
        "boss.PNG"
      ]
    }
  },
  "nqueens": {
    "_id": "nqueens",
    "_group": "it",
    "_enabled": true,
    "name": "N-Queens Solver",
    "description": "The <a href=\"https://en.wikipedia.org/wiki/Eight_queens_puzzle\" target=\"_blank\">N-Queens Problem</a> is the problem of placing N queens on an NxN chessboard in a way so that no two queens attack each other. This project was a student project of computer graphics, in which the theme was to create a visual representation of the process of solving this problem. In the context of this project, we were restricted to using only the WebGL API.<br><br>The end result was a viewer that displays an animation of an algorithm implemented to solve this problem. This algorithm and the viewer are adjustable by a number of settings. Most prominently, the user may choose the N parameter, affecting the number of queen pieces. It can also specify a starting queen, fixing one queen in a tile on the board. Finally, the viewer displays the solving process as an animation. This animation can be sped up or paused and viewed step-by-step.",
    "metadata": {
      "link": "https://vileoar.github.io/cv_nqueens_webgl/",
      "context": "Student Project",
      "date": "November 2020",
      "duration": "2 months",
      "team": 2,
      "tools": "WebGL"
    },
    "brief": [
      "Visual representation of the N-Queens Problem",
      "3D Animation",
      "Computer Graphics",
      "Made with WebGL",
      "Student Project"
    ],
    "overview": [
      "Project Manager",
      "Animation Programmer",
      "Shader Programmer",
      "3D Programmer",
      "UI/UX Designer"
    ],
    "roles": [
      ["Project Manager"],
      [
        "Animation Programmer",
        "Responsible for creating every animation"
      ],
      [
        "Shader Programmer",
        "Responsible for setting up lighting and materials"
      ],
      [
        "3D Programmer",
        "Responsible for constructing the point data for the queen and board models"
      ],
      [
        "UI/UX Designer/Programmer",
        "Responsible for handling user input",
        "Responsible for connecting the animation flow with the algorithm and correctly displaying the necessary content"
      ]
    ],
    "filters": [
      "webgl",
      "3D",
      "computer-graphics",
      "student"
    ],
    "sorters": {
      "name": "nqueens",
      "date": "2020-11"
    },
    "tags": [
      
    ],
    "media": {
      "thumbnail": "nqueens_cover.gif",
      "cover": "nqueens_cover.gif",
      "gallery": [
        "showcase.gif",
        "loss.gif",
        "general.png",
        "topdown.png",
        "large.png",
        "skin.png"
      ]
    }
  },
  "moneywiz": {
    "_id": "moneywiz",
    "_group": "it",
    "_enabled": true,
    "name": "MoneyWiz",
    "description": "MoneyWiz is a prototype money management mobile app. It was thought as an intuitive and simple to use app, but with common features in this kind of app. Most notably, The user is able to create and manage different accounts, as well as to establish goals for each of them.<br><br>The primary objectives were the ability to create different types of expenses that the user could use later when registering a new expense. Then, expenses could be displayed, sorted by these categories and viewed in different charts. The user can also choose a time frame when viewing expenses, namely weekly and monthly.",
    "metadata": {
      "link": "https://github.com/moneywiz/money_wiz",
      "context": "Student Project",
      "date": "April 2020",
      "duration": "2 months",
      "team": 3,
      "tools": "Flutter"
    },
    "brief": [
      "Money Management App",
      "Create and manage accounts and saving goals",
      "Easily add daily expenses",
      "Categorise recurring expenses",
      "Display expenses in charts"
    ],
    "overview": [
      "Project Manager",
      "Mobile Development",
      "UI Designer",
      "Usability Tests"
    ],
    "roles": [
      [
        "Project Manager"
      ],
      [
        "Programmer",
        "Implemented the calendar views (day, week, month)",
        "Implemented the New Expense screen",
        "Helped implement data persistence to file"
      ],
      [
        "UI Design",
        "Responsible for designing and implementing part of the interface"
      ],
      [
        "Quality Assurance and Usability",
        "Co-responsible in performing usability and quality assurance tests",
        "Co-responsible in defining personas, use cases and scenarios"
      ]
    ],
    "filters": [
      "flutter",
      "student",
      "mobile-development"
    ],
    "sorters": {
      "name": "moneywiz",
      "date": "2020-04"
    },
    "tags": [
      
    ],
    "media": {
      "thumbnail": "moneywiz_cover.png",
      "cover": "moneywiz_cover.png",
      "gallery": [
        "daylog.png",
        "goals.jpg",
        "monthlog.png",
        "monthstats.png",
        "statistics.jpg",
        "balance.jpg"
      ]
    }
  },
  "detimotica": {
    "_id": "detimotica",
    "_group": "it",
    "_enabled": true,
    "name": "DETImótica (Mobile App)",
    "description": "DETImótica was a project that intended to transform the Department of Electronics, Telecomunications and Informatics (DETI) of the University of Aveiro into an intelligent and modern space, by installing various sensors across the department to monitor the environmental conditions of classrooms, corridors and other spaces. Data from this system of sensors would be available for common use, both by the department staff and the students.<br><br>However, as luck (or lack thereof) would have it, the COVID-19 pandemic happened, which meant that installing sensors in our department and testing them became impossible. Nevertheless, we had to go on, so we made a smaller prototype as a proof of concept. In the end, while we could not use the project for its intended purpose, we managed to successfully implement every functionality we had planned.<br><br>While we all equally contributed to the project and occasionally stepped into each other's work, we each had our primary role. In my case, I was tasked with developing the Mobile App, which was meant as a way to monitor the installed sensors, as well as use the alarms for each sensor, which would, then, send a notification accordingly. Of course, this app also had to take into account authentication into the system and the user's role permissions.",
    "metadata": {
      "link": "https://detimotica.github.io/",
      "context": "Student Project",
      "date": "February 2020",
      "duration": "6 months",
      "team": 6,
      "tools": "Flutter"
    },
    "brief": [
      "Domotics system to monitor the environmental conditions of the department",
      "Mobile App capable of authenticating into the system",
      "Receiving notifications, according to specified alerts",
      "Categorise recurring expenses",
      "View sensor data in real time"
    ],
    "overview": [
      "Project Manager",
      "Mobile Development",
      "UI Designer",
      "Usability Tests"
    ],
    "roles": [
      [
        "UI Designer",
        "Responsible for designing and implementing the Mobile App's interface"
      ],
      [
        "Authentication in the system",
        "Implemented the authentication into the University of Aveiro's platform to interact with the registered sensors and user roles"
      ],
      [
        "Notification System",
        "Implemented the notification system of the app, via firebase"
      ],
      [
        "Real-time sensor data visualisation",
        "Responsible for receiving, parsing and displaying the real-time sensor data in graphs"
      ]
    ],
    "filters": [
      "flutter",
      "student",
      "mobile-development"
    ],
    "sorters": {
      "name": "detimotica",
      "date": "2020-02"
    },
    "tags": [
      
    ],
    "media": {
      "thumbnail": "detimotica_cover.png",
      "cover": "https://www.youtube.com/embed/haGXzBnWsdA",
      "gallery": [
        "salas.PNG",
        "details.PNG",
        "data.PNG",
        "other_data.png",
        "notify.png",
        "diagram.png"
      ]
    }
  }
}